plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
    id 'org.jetbrains.kotlinx.kover' version '0.9.2'
    id 'org.jlleitschuh.gradle.ktlint' version '13.0.0'
}

group = 'com.ingsis.grupo10'
version = '1.0.0'
description = 'printscript service for multi-service project'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

def env = new Properties()
def envFile = file('.env')
if (envFile.isFile() && envFile.canRead()) {
    envFile.withInputStream { env.load(it) }
}

repositories {
    // mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/IngSisG10/printscript-tp1")
        credentials {
            username = findProperty("gpr.user") ?: env?.getProperty("GITHUB_ACTOR") ?: System.getenv("GITHUB_ACTOR")
            password = findProperty("gpr.key") ?: env?.getProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'com.ingsis.grupo10:printscript-interpreter:1.2.0'
    implementation 'com.ingsis.grupo10:printscript-parser:1.2.0'
    implementation 'com.ingsis.grupo10:printscript-lexer:1.2.0'
    implementation 'com.ingsis.grupo10:printscript-common:1.2.0'
    implementation 'com.ingsis.grupo10:printscript-formatter:1.2.0'
    implementation 'com.ingsis.grupo10:printscript-linter:1.2.0'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("installGitHooks", Exec) {
    group = "setup"
    description = "Install git hooks"
    commandLine "git", "config", "core.hooksPath", ".github/hooks"
    doLast {
        println("Hooks configured via core.hooksPath")
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = "${project.name}-service"
            version = project.version
        }
    }
    repositories {
        mavenCentral()
        maven {
            url = uri("https://maven.pkg.github.com/IngSisG10/printscript-tp1")
            credentials {
                username = env?.getProperty("GITHUB_ACTOR") ?: System.getenv("GITHUB_ACTOR")
                password = env?.getProperty("GITHUB_TOKEN") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}